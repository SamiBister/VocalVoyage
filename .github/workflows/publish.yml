name: Publish Containers

on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
        default: "main"
    secrets:
      DOCKER_USER:
        required: true
      DOCKER_PASSWORD:
        required: true
      COSIGN_KEY:
        required: true
      COSIGN_PASSWORD:
        required: true

jobs:
  determine-version:
    name: Determine Version
    runs-on: ubuntu-latest
    # Expose the version as a job output
    outputs:
      custom_version: ${{ steps.set_version.outputs.custom_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: setup
        uses: ./.github/actions/setup

      - name: Set version
        id: set_version
        uses: ./.github/actions/version
        # Note: Ensure your `.github/actions/version` action sets an output
        # something like:
        #   echo "::set-output name=custom_version::$CUSTOM_VERSION"

      - name: Debug version output
        run: |
          echo "Version output debug: ${{ steps.set_version.outputs.custom_version }}"
          echo "Step outputs: ${{ toJSON(steps.set_version.outputs) }}"

  publish-artifacts-backend:
    name: Publish Artifacts - Backend
    runs-on: ubuntu-latest
    needs: [determine-version] # Waits for 'determine-version' job
    permissions:
      security-events: write
      actions: read
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: setup
        uses: ./.github/actions/setup

      - name: Print version
        run: |
          echo "Version from determine-version job: ${{ needs.determine-version.outputs.custom_version }}"

      - name: Print enb version
        run: |
          printenv | sort

      - name: setup security
        uses: ./.github/actions/security_setup

      - name: Generate requirements.txt
        shell: bash
        run: uv export --format requirements-txt --output-file requirements.txt

      - name: move requirements.txt
        shell: bash
        run: mv requirements.txt app/requirements.txt

      - name: Security scan to backend code
        uses: ./.github/actions/securitycode
        with:
          directory: ./app

      - name: Build and Publish Backend Docker Image
        uses: ./.github/actions/docker-build-publish
        with:
          working-directory: "."
          dockerfile-path: "devops/docker/backend/Dockerfile"
          docker-registry: "docker.io"
          docker-repository: "samibister"
          docker-image-name: "vocabvoyage-backend"
          # use the version from the determine-version job
          docker-tag: ${{ needs.determine-version.outputs.custom_version }}
          docker-user: ${{ secrets.DOCKER_USER }}
          docker-password: ${{ secrets.DOCKER_PASSWORD }}
          cosign-key: ${{ secrets.COSIGN_KEY }}
          cosign-password: ${{ secrets.COSIGN_PASSWORD }}

  publish-artifacts-frontend:
    name: Publish Artifacts - Frontend
    runs-on: ubuntu-latest
    needs: [determine-version] # Waits for 'determine-version' job
    permissions:
      security-events: write
      actions: read
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: setup
        uses: ./.github/actions/setup

      - name: Print version
        run: |
          echo "Version from determine-version job: ${{ needs.determine-version.outputs.custom_version }}"

      - name: setup security
        uses: ./.github/actions/security_setup

      - name: Security scan to frontend code
        uses: ./.github/actions/securitycode
        with:
          directory: ./frontend

      - name: Build and Publish Frontend Docker Image
        uses: ./.github/actions/docker-build-publish
        with:
          working-directory: "."
          dockerfile-path: "devops/docker/frontend/Dockerfile"
          docker-registry: "docker.io"
          docker-repository: "samibister"
          docker-image-name: "vocabvoyage-front"
          # use the version from the determine-version job
          docker-tag: ${{ needs.determine-version.outputs.custom_version }}
          docker-user: ${{ secrets.DOCKER_USER }}
          docker-password: ${{ secrets.DOCKER_PASSWORD }}
          cosign-key: ${{ secrets.COSIGN_KEY }}
          cosign-password: ${{ secrets.COSIGN_PASSWORD }}
