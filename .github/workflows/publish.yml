name: Publish Containers

on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
        default: "main"

jobs:
  publish-artifacts:
    permissions:
      # required for all workflows
      security-events: write
      # only required for workflows in private repositories
      actions: read
      contents: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: setup
        uses: ./.github/actions/setup

      - name: Set version
        uses: ./.github/actions/version

      - name: print version
        run: echo ${{ env.CUSTOM_VERSION }}

      - name: setup security
        uses: ./.github/actions/security_setup

      - name: Generate requirements.txt
        shell: bash
        run: uv export --format requirements-txt --output-file requirements.txt

      - name: move requirements.txt
        shell: bash
        run: mv requirements.txt app/requirements.txt

      - name: Security scan to backend code
        uses: ./.github/actions/securitycode
        with:
          directory: ./app

      - name: Security scan to frontend code
        uses: ./.github/actions/securitycode
        with:
          directory: ./frontend

      - name: Build and Publish Backend Docker Image
        uses: ./.github/actions/docker-build-publish
        with:
          working-directory: "."
          dockerfile-path: "devops/docker/backend/Dockerfile"
          docker-registry: "docker.io"
          docker-image-name: "samibister/vocabvoyage-backend"
          docker-tag: "${{ env.CUSTOM_VERSION }}"
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Publish Frontend Docker Image
        uses: ./.github/actions/docker-build-publish
        with:
          working-directory: "."
          dockerfile-path: "devops/docker/frontend/Dockerfile"
          docker-registry: "docker.io"
          docker-image-name: "samibister/vocabvoyage-front"
          docker-tag: "${{ env.CUSTOM_VERSION }}"
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
