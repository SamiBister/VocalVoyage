name: Run Tests

on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
        default: "main"

jobs:
  lock_file:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - uses: ./.github/actions/setup
      - run: uv lock --locked

  linting:
    runs-on: ubuntu-latest
    needs: [lock_file]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - uses: ./.github/actions/setup
      - run: uvx ruff check .

  formatting:
    runs-on: ubuntu-latest
    needs: [lock_file]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - uses: ./.github/actions/setup
      - run: uvx ruff format --check .

  type_consistency:
    runs-on: ubuntu-latest
    needs: [lock_file]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - uses: ./.github/actions/setup
      - run: uv run pyright .

  unittests:
    runs-on: ubuntu-latest
    needs: [lock_file]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - uses: ./.github/actions/setup
      - run: uv run pytest -m unit -vvvv --durations=0 --cov --cov-report=xml
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  e2etests:
    runs-on: ubuntu-latest
    needs: [lock_file]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - uses: ./.github/actions/setup
      - name: Install Dependencies
        run: |
          uv sync
          cd frontend
          npm install
      - name: Build Frontend
        run: |
          cd frontend
          npm run build
      - name: Kill Process on Port 3000
        shell: bash
        run: |
          if lsof -i :3000; then
            kill -9 $(lsof -t -i :3000)
          fi
      - name: Start Backend Server
        run: |
          uv run uvicorn app.main:app --host 0.0.0.0 --port 8000 &
          echo $! > backend_pid.txt
      - name: Wait for Backend to Start
        run: |
          until curl -s http://localhost:8000/docs; do
            echo "Waiting for backend server..."
            sleep 5
          done
          echo "Backend server is up!"
      - name: Start Frontend Server
        run: |
          cd frontend
          npm run start -- --hostname 0.0.0.0 &
          echo $! > ../frontend_pid.txt
      - name: Wait for Frontend to Start
        run: |
          until curl -s http://localhost:3000/; do
            echo "Waiting for frontend server..."
            sleep 5
          done
          echo "Frontend server is up!"
      - name: Run Playwright Tests
        run: |
          uv run playwright install
          uv run pytest -m e2e -vvv --durations=0 --cov --cov-report=xml
      - name: Stop Servers
        run: |
          kill $(cat backend_pid.txt)
          kill $(cat frontend_pid.txt)
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-artifacts
          path: test-artifacts/
          retention-days: 1
